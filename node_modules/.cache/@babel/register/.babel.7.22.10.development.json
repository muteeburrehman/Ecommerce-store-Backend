{"{\"assumptions\":{},\"sourceRoot\":\"/home/muteeb/Desktop/e-store-backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/muteeb/Desktop/e-store-backend\",\"filename\":\"/home/muteeb/Desktop/e-store-backend/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/muteeb/Desktop/e-store-backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-class-static-block\",\"visitor\":{\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"transform-numeric-separator\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-logical-assignment-operators\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-nullish-coalescing-operator\",\"visitor\":{\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-chaining\",\"visitor\":{\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-json-strings\",\"visitor\":{\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-optional-catch-binding\",\"visitor\":{\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-generator-functions\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-rest-spread\",\"visitor\":{\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null,null]},\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regenerator\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"MemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-top-level-await\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.10:development":{"value":{"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _express = _interopRequireDefault(require(\"express\"));\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\nvar _sqlite = _interopRequireDefault(require(\"sqlite3\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar cors = require('cors');\nvar app = (0, _express[\"default\"])();\napp.use(cors());\napp.use(_bodyParser[\"default\"].json());\napp.use('/images', _express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, '../assets')));\nvar db = new _sqlite[\"default\"].Database('./mock.db', _sqlite[\"default\"].OPEN_READWRITE | _sqlite[\"default\"].OPEN_CREATE, function (err) {\n  if (err) {\n    console.error(err.message);\n  } else {\n    console.log('Connected to the database');\n\n    // Create tables and perform other initializations here\n    // (Code for creating products, users, and carts tables)\n    db.run(\"\\n            CREATE TABLE IF NOT EXISTS products (\\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\\n                name TEXT,\\n                price DOUBLE,\\n                description TEXT,\\n                imageUrl TEXT,\\n                averageRating TEXT\\n            )\\n        \", function (createErr) {\n      if (createErr) {\n        console.error('Error creating products table:', createErr.message);\n      } else {\n        console.log('Products table created successfully');\n      }\n    });\n\n    // Create the users table if it doesn't exist\n    db.run(\"\\n            CREATE TABLE IF NOT EXISTS users (\\n                id PRIMARY KEY AUTOINCREMENT,\\n                username TEXT NOT NULL,\\n                email TEXT NOT NULL,\\n                PhoneNo TEXT,\\n                cartItems TEXT DEFAULT ''\\n            )\\n        \", function (createErr) {\n      if (createErr) {\n        console.error('Error creating users table:', createErr.message);\n      } else {\n        console.log('Users table created successfully');\n      }\n    });\n    db.run(\"\\n            CREATE TABLE IF NOT EXISTS carts (\\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\\n                user_id INTEGER, \\n                cart_item_id INTEGER,\\n                product_id INTEGER,\\n                quantity INTEGER,\\n                price DECIMAL(10, 2),\\n                total_price DECIMAL(10, 2),\\n                FOREIGN KEY (user_id) REFERENCES users(id),\\n                FOREIGN KEY (product_id) REFERENCES products(id)\\n            )\\n        \", function (createErr) {\n      if (createErr) {\n        console.error('Error creating carts table:', createErr.message);\n      } else {\n        console.log('Carts table created successfully');\n      }\n    });\n  }\n});\n\n// ... Other parts of your code ...\nfunction queryDatabase(_x, _x2) {\n  return _queryDatabase.apply(this, arguments);\n}\nfunction _queryDatabase() {\n  _queryDatabase = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee9(query, params) {\n    return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          return _context9.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var db = new _sqlite[\"default\"].Database('./mock.db');\n            db.all(query, params, function (err, rows) {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(rows);\n              }\n              db.close();\n            });\n          }));\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9);\n  }));\n  return _queryDatabase.apply(this, arguments);\n}\napp.get('/api/products', /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res) {\n    var rows;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return queryDatabase('SELECT * FROM products', []);\n        case 3:\n          rows = _context.sent;\n          res.status(200).json(rows);\n          _context.next = 10;\n          break;\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          res.status(500).json({\n            error: 'Database error'\n          });\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return function (_x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}());\n// API route to get a user's cart items\napp.get('/api/users/:userId/cart', /*#__PURE__*/function () {\n  var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res) {\n    var userId, cartItems;\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          userId = req.params.userId;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return queryDatabase('SELECT c.*, p.name, p.price, p.imageUrl ' + 'FROM carts c ' + 'JOIN products p ON c.product_id = p.id ' + 'WHERE c.user_id = ?', [userId]);\n        case 4:\n          cartItems = _context2.sent;\n          res.status(200).json(cartItems);\n          _context2.next = 11;\n          break;\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](1);\n          res.status(500).json({\n            error: 'Database error'\n          });\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n  return function (_x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/api/products/:productId', /*#__PURE__*/function () {\n  var _ref3 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res) {\n    var productId, product;\n    return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          productId = req.params.productId;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return queryDatabase('SELECT * FROM products WHERE id = ?', [productId]);\n        case 4:\n          product = _context3.sent;\n          if (product[0]) {\n            _context3.next = 8;\n            break;\n          }\n          res.status(404).json('Could not find the product!');\n          return _context3.abrupt(\"return\");\n        case 8:\n          res.status(200).json(product[0]);\n          _context3.next = 14;\n          break;\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](1);\n          res.status(500).json({\n            error: 'Database error'\n          });\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 11]]);\n  }));\n  return function (_x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n\n/*\napp.post('/api/users/:userId/cart', async (req, res) => {\n    const {userId} = req.params;\n    const {productId} = req.body;\n\n    try {\n        const product = await queryDatabase('SELECT * FROM products WHERE id = ?', [productId]);\n        if (!product[0]) {\n            res.status(404).json('Could not find product!');\n            return;\n        }\n        await queryDatabase('UPDATE users SET cartItems = cartItems || ? || \",\" WHERE id = ?', [productId, userId]);\n        res.status(200).json(product[0]);\n    } catch (err) {\n        res.status(500).json({error: 'Database error'});\n    }\n});\n*/\n\n/*\napp.delete('/api/users/:userId/cart/:productId', async (req, res) => {\n    const {userId, productId} = req.params;\n\n    try {\n        await queryDatabase('UPDATE users SET cartItems = REPLACE(cartItems, ? || \",\", \"\") WHERE id = ?', [productId, userId]);\n        const rows = await queryDatabase('SELECT * FROM products WHERE id IN (SELECT cartItems FROM users WHERE id = ?)', [userId]);\n        res.status(200).json(rows);\n    } catch (err) {\n        res.status(500).json({error: 'Database error'});\n    }\n});\n*/\n\n//insert,update,modify\n\napp.post('/api/products', function (req, res) {\n  var _req$body = req.body,\n    id = _req$body.id,\n    name = _req$body.name,\n    price = _req$body.price,\n    description = _req$body.description,\n    imageUrl = _req$body.imageUrl,\n    averageRating = _req$body.averageRating;\n  var insertQuery = \"\\n    INSERT INTO products (name, price, description, imageUrl, averageRating)\\n    VALUES (?, ?, ?, ?, ?)\\n  \";\n  db.run(insertQuery, [name, price, description, imageUrl, averageRating], function (err) {\n    if (err) {\n      console.error(err.message);\n      res.status(500).json({\n        error: 'Failed to insert product'\n      });\n    } else {\n      res.status(201).json({\n        message: 'Product inserted successfully'\n      });\n    }\n  });\n});\n\n// API route to add to cart\napp.post('/api/users/:userId/cart', /*#__PURE__*/function () {\n  var _ref4 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res) {\n    var userId, _req$body2, product_id, quantity, product, cartItem, _price, _total_price, updateQuery, price, total_price, insertQuery;\n    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          userId = req.params.userId;\n          _req$body2 = req.body, product_id = _req$body2.product_id, quantity = _req$body2.quantity;\n          _context4.prev = 2;\n          _context4.next = 5;\n          return queryDatabase('SELECT * FROM products WHERE id = ?', [product_id]);\n        case 5:\n          product = _context4.sent;\n          if (product[0]) {\n            _context4.next = 9;\n            break;\n          }\n          res.status(404).json('Could not find product!');\n          return _context4.abrupt(\"return\");\n        case 9:\n          _context4.next = 11;\n          return queryDatabase('SELECT * FROM carts WHERE product_id = ? AND user_id = ?', [product_id, userId]);\n        case 11:\n          cartItem = _context4.sent;\n          if (!cartItem[0]) {\n            _context4.next = 20;\n            break;\n          }\n          // Calculate total price based on updated quantity\n          // const _qty = parseInt(cartItem[0].quantity) + quantity;\n          _price = parseFloat(product[0].price);\n          _total_price = _price * quantity; // Update the cart item with new quantity and total price\n          updateQuery = \"\\n            UPDATE carts\\n            SET quantity = ?, price = ?, total_price = ?\\n            WHERE product_id = ?\\n        \";\n          _context4.next = 18;\n          return queryDatabase(updateQuery, [quantity, _price, _total_price, product_id]);\n        case 18:\n          res.status(200).json({\n            message: 'Cart item updated successfully'\n          });\n          return _context4.abrupt(\"return\");\n        case 20:\n          // Calculate total price based on product price and quantity\n          price = parseFloat(product[0].price);\n          total_price = price * quantity; // Insert the item into the cart\n          insertQuery = \"\\n            INSERT INTO carts (user_id, product_id, quantity, price, total_price)\\n            VALUES (?, ?, ?, ?, ?)\\n        \";\n          _context4.next = 25;\n          return queryDatabase(insertQuery, [userId, product_id, quantity, price, total_price]);\n        case 25:\n          res.status(200).json({\n            message: 'Product added to cart successfully'\n          });\n          _context4.next = 31;\n          break;\n        case 28:\n          _context4.prev = 28;\n          _context4.t0 = _context4[\"catch\"](2);\n          res.status(500).json({\n            error: 'Database error:' + _context4.t0\n          });\n        case 31:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[2, 28]]);\n  }));\n  return function (_x9, _x10) {\n    return _ref4.apply(this, arguments);\n  };\n}());\n\n// API route for user login\napp.post('/api/login', /*#__PURE__*/function () {\n  var _ref5 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(req, res) {\n    var _req$body3, email, password, user;\n    return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _req$body3 = req.body, email = _req$body3.email, password = _req$body3.password;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return queryDatabase('SELECT * FROM users WHERE email = ? AND password = ?', [email, password]);\n        case 4:\n          user = _context5.sent;\n          if (user[0]) {\n            _context5.next = 8;\n            break;\n          }\n          res.status(401).json({\n            message: 'Invalid email or password'\n          });\n          return _context5.abrupt(\"return\");\n        case 8:\n          res.status(200).json({\n            message: 'Login successful',\n            user: user[0]\n          });\n          _context5.next = 14;\n          break;\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](1);\n          res.status(500).json({\n            message: 'Database error'\n          });\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[1, 11]]);\n  }));\n  return function (_x11, _x12) {\n    return _ref5.apply(this, arguments);\n  };\n}());\n// API route for user registration\napp.post('/api/register', /*#__PURE__*/function () {\n  var _ref6 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(req, res) {\n    var _req$body4, email, password, username, PhoneNo, userExists, insertQuery;\n    return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _req$body4 = req.body, email = _req$body4.email, password = _req$body4.password, username = _req$body4.username, PhoneNo = _req$body4.PhoneNo;\n          _context6.prev = 1;\n          _context6.next = 4;\n          return queryDatabase('SELECT * FROM users WHERE email = ?', [email]);\n        case 4:\n          userExists = _context6.sent;\n          if (!userExists[0]) {\n            _context6.next = 8;\n            break;\n          }\n          res.status(400).json({\n            message: 'User already exists'\n          });\n          return _context6.abrupt(\"return\");\n        case 8:\n          insertQuery = \"\\n            INSERT INTO users (username, email, PhoneNo, password)\\n            VALUES (?, ?, ?, ?)\\n        \";\n          _context6.next = 11;\n          return queryDatabase(insertQuery, [username, email, PhoneNo, password]);\n        case 11:\n          res.status(201).json({\n            message: 'User registered successfully'\n          });\n          _context6.next = 17;\n          break;\n        case 14:\n          _context6.prev = 14;\n          _context6.t0 = _context6[\"catch\"](1);\n          res.status(500).json({\n            message: 'Database error'\n          });\n        case 17:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[1, 14]]);\n  }));\n  return function (_x13, _x14) {\n    return _ref6.apply(this, arguments);\n  };\n}());\n\n// API route to update a product based on productId\napp.put('/api/products/:productId', function (req, res) {\n  var productId = req.params.productId;\n  var _req$body5 = req.body,\n    name = _req$body5.name,\n    price = _req$body5.price,\n    description = _req$body5.description,\n    imageUrl = _req$body5.imageUrl,\n    averageRating = _req$body5.averageRating;\n  var updateQuery = \"\\n    UPDATE products\\n    SET name = ?, price = ?, description = ?, imageUrl = ?, averageRating = ?\\n    WHERE id = ?\\n  \";\n  db.run(updateQuery, [name, price, description, imageUrl, averageRating, productId], function (err) {\n    if (err) {\n      console.error(err.message);\n      res.status(500).json({\n        error: 'Failed to update product'\n      });\n    } else {\n      res.status(200).json({\n        message: 'Product updated successfully'\n      });\n    }\n  });\n});\n\n// API route to update the quantity of a product in a user's cart\napp.put('/api/users/:userId/cart/:cartItemId', /*#__PURE__*/function () {\n  var _ref7 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7(req, res) {\n    var _req$params, userId, cartItemId, quantity, cartItem, product, price, total_price, updateQuery;\n    return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _req$params = req.params, userId = _req$params.userId, cartItemId = _req$params.cartItemId;\n          quantity = req.body.quantity;\n          _context7.prev = 2;\n          _context7.next = 5;\n          return queryDatabase('SELECT * FROM carts WHERE id = ? AND user_id = ?', [cartItemId, userId]);\n        case 5:\n          cartItem = _context7.sent;\n          if (cartItem[0]) {\n            _context7.next = 9;\n            break;\n          }\n          res.status(404).json('Could not find cart item!');\n          return _context7.abrupt(\"return\");\n        case 9:\n          _context7.next = 11;\n          return queryDatabase('SELECT * FROM products WHERE id = ?', [cartItem[0].product_id]);\n        case 11:\n          product = _context7.sent;\n          if (product[0]) {\n            _context7.next = 15;\n            break;\n          }\n          res.status(404).json('Could not find product!');\n          return _context7.abrupt(\"return\");\n        case 15:\n          // Calculate total price based on updated quantity\n          price = parseFloat(product[0].price);\n          total_price = price * quantity; // Update the cart item with new quantity and total price\n          updateQuery = \"\\n            UPDATE carts\\n            SET quantity = ?, price = ?, total_price = ?\\n            WHERE id = ?\\n        \";\n          _context7.next = 20;\n          return queryDatabase(updateQuery, [quantity, price, total_price, cartItemId]);\n        case 20:\n          res.status(200).json({\n            message: 'Cart item updated successfully'\n          });\n          _context7.next = 26;\n          break;\n        case 23:\n          _context7.prev = 23;\n          _context7.t0 = _context7[\"catch\"](2);\n          res.status(500).json({\n            error: 'Database error'\n          });\n        case 26:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[2, 23]]);\n  }));\n  return function (_x15, _x16) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp[\"delete\"]('/api/users/:userId/cart/:cartItemId', /*#__PURE__*/function () {\n  var _ref8 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8(req, res) {\n    var _req$params2, userId, cartItemId, cartItem, deleteQuery;\n    return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _req$params2 = req.params, userId = _req$params2.userId, cartItemId = _req$params2.cartItemId;\n          _context8.prev = 1;\n          _context8.next = 4;\n          return queryDatabase('SELECT * FROM carts WHERE id = ? AND user_id = ?', [cartItemId, userId]);\n        case 4:\n          cartItem = _context8.sent;\n          if (cartItem[0]) {\n            _context8.next = 8;\n            break;\n          }\n          res.status(404).json({\n            message: 'Could not find cart item!'\n          });\n          return _context8.abrupt(\"return\");\n        case 8:\n          // Delete the item from the cart\n          deleteQuery = \"\\n            DELETE FROM carts\\n            WHERE id = ? AND user_id = ?\\n        \";\n          _context8.next = 11;\n          return queryDatabase(deleteQuery, [cartItemId, userId]);\n        case 11:\n          res.status(200).json({\n            message: 'Product removed from cart successfully'\n          });\n          _context8.next = 17;\n          break;\n        case 14:\n          _context8.prev = 14;\n          _context8.t0 = _context8[\"catch\"](1);\n          res.status(500).json({\n            message: 'Database error'\n          });\n        case 17:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, null, [[1, 14]]);\n  }));\n  return function (_x17, _x18) {\n    return _ref8.apply(this, arguments);\n  };\n}());\n// API route to delete a product based on productId\napp[\"delete\"]('/api/products/:productId', function (req, res) {\n  var productId = req.params.productId;\n  var deleteQuery = \"\\n    DELETE FROM products\\n    WHERE id = ?\\n  \";\n  db.run(deleteQuery, [productId], function (err) {\n    if (err) {\n      console.error(err.message);\n      res.status(500).json({\n        error: 'Failed to delete product'\n      });\n    } else {\n      res.status(200).json({\n        message: 'Product deleted successfully'\n      });\n    }\n  });\n});\n\n// Define other routes here\n\n// ... The rest of your API routes ...\n\napp.listen(8000, function () {\n  console.log('Server is listening on port 8000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["_express","_interopRequireDefault","require","_bodyParser","_sqlite","_path","cors","app","express","use","bodyParser","json","path","join","__dirname","db","sqlite3","Database","OPEN_READWRITE","OPEN_CREATE","err","console","error","message","log","run","createErr","queryDatabase","_x","_x2","_queryDatabase","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee9","query","params","wrap","_callee9$","_context9","prev","next","abrupt","Promise","resolve","reject","all","rows","close","stop","get","_ref","_callee","req","res","_callee$","_context","sent","status","t0","_x3","_x4","_ref2","_callee2","userId","cartItems","_callee2$","_context2","_x5","_x6","_ref3","_callee3","productId","product","_callee3$","_context3","_x7","_x8","post","_req$body","body","id","name","price","description","imageUrl","averageRating","insertQuery","_ref4","_callee4","_req$body2","product_id","quantity","cartItem","_price","_total_price","updateQuery","total_price","_callee4$","_context4","parseFloat","_x9","_x10","_ref5","_callee5","_req$body3","email","password","user","_callee5$","_context5","_x11","_x12","_ref6","_callee6","_req$body4","username","PhoneNo","userExists","_callee6$","_context6","_x13","_x14","put","_req$body5","_ref7","_callee7","_req$params","cartItemId","_callee7$","_context7","_x15","_x16","_ref8","_callee8","_req$params2","deleteQuery","_callee8$","_context8","_x17","_x18","listen"],"sourceRoot":"/home/muteeb/Desktop/e-store-backend/src/","sources":["server.js"],"sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport sqlite3 from 'sqlite3';\nimport path from 'path';\n\nconst cors = require('cors')\nconst app = express();\n\napp.use(cors());\n\napp.use(bodyParser.json());\napp.use('/images', express.static(path.join(__dirname, '../assets')));\n\nconst db = new sqlite3.Database('./mock.db', sqlite3.OPEN_READWRITE | sqlite3.OPEN_CREATE, (err) => {\n    if (err) {\n        console.error(err.message);\n    } else {\n        console.log('Connected to the database');\n\n        // Create tables and perform other initializations here\n        // (Code for creating products, users, and carts tables)\n        db.run(`\n            CREATE TABLE IF NOT EXISTS products (\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\n                name TEXT,\n                price DOUBLE,\n                description TEXT,\n                imageUrl TEXT,\n                averageRating TEXT\n            )\n        `, (createErr) => {\n            if (createErr) {\n                console.error('Error creating products table:', createErr.message);\n            } else {\n                console.log('Products table created successfully');\n            }\n        });\n\n        // Create the users table if it doesn't exist\n        db.run(`\n            CREATE TABLE IF NOT EXISTS users (\n                id PRIMARY KEY AUTOINCREMENT,\n                username TEXT NOT NULL,\n                email TEXT NOT NULL,\n                PhoneNo TEXT,\n                cartItems TEXT DEFAULT ''\n            )\n        `, (createErr) => {\n            if (createErr) {\n                console.error('Error creating users table:', createErr.message);\n            } else {\n                console.log('Users table created successfully');\n            }\n        });\n\n        db.run(`\n            CREATE TABLE IF NOT EXISTS carts (\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\n                user_id INTEGER, \n                cart_item_id INTEGER,\n                product_id INTEGER,\n                quantity INTEGER,\n                price DECIMAL(10, 2),\n                total_price DECIMAL(10, 2),\n                FOREIGN KEY (user_id) REFERENCES users(id),\n                FOREIGN KEY (product_id) REFERENCES products(id)\n            )\n        `, (createErr) => {\n            if (createErr) {\n                console.error('Error creating carts table:', createErr.message);\n            } else {\n                console.log('Carts table created successfully');\n            }\n        });\n    }\n});\n\n// ... Other parts of your code ...\n\n\nasync function queryDatabase(query, params) {\n    return new Promise((resolve, reject) => {\n        const db = new sqlite3.Database('./mock.db');\n        db.all(query, params, (err, rows) => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(rows);\n            }\n            db.close();\n        });\n    });\n}\n\napp.get('/api/products', async (req, res) => {\n    try {\n        const rows = await queryDatabase('SELECT * FROM products', []);\n        res.status(200).json(rows);\n    } catch (err) {\n        res.status(500).json({error: 'Database error'});\n    }\n});\n// API route to get a user's cart items\napp.get('/api/users/:userId/cart', async (req, res) => {\n    const { userId } = req.params;\n\n    try {\n        const cartItems = await queryDatabase(\n            'SELECT c.*, p.name, p.price, p.imageUrl ' +\n            'FROM carts c ' +\n            'JOIN products p ON c.product_id = p.id ' +\n            'WHERE c.user_id = ?',\n            [userId]\n        );\n        res.status(200).json(cartItems);\n    } catch (err) {\n        res.status(500).json({ error: 'Database error' });\n    }\n});\n\napp.get('/api/products/:productId', async (req, res) => {\n    const {productId} = req.params;\n\n    try {\n        const product = await queryDatabase('SELECT * FROM products WHERE id = ?', [productId]);\n        if (!product[0]) {\n            res.status(404).json('Could not find the product!');\n            return;\n        }\n        res.status(200).json(product[0]);\n    } catch (err) {\n        res.status(500).json({error: 'Database error'});\n    }\n});\n\n/*\napp.post('/api/users/:userId/cart', async (req, res) => {\n    const {userId} = req.params;\n    const {productId} = req.body;\n\n    try {\n        const product = await queryDatabase('SELECT * FROM products WHERE id = ?', [productId]);\n        if (!product[0]) {\n            res.status(404).json('Could not find product!');\n            return;\n        }\n        await queryDatabase('UPDATE users SET cartItems = cartItems || ? || \",\" WHERE id = ?', [productId, userId]);\n        res.status(200).json(product[0]);\n    } catch (err) {\n        res.status(500).json({error: 'Database error'});\n    }\n});\n*/\n\n/*\napp.delete('/api/users/:userId/cart/:productId', async (req, res) => {\n    const {userId, productId} = req.params;\n\n    try {\n        await queryDatabase('UPDATE users SET cartItems = REPLACE(cartItems, ? || \",\", \"\") WHERE id = ?', [productId, userId]);\n        const rows = await queryDatabase('SELECT * FROM products WHERE id IN (SELECT cartItems FROM users WHERE id = ?)', [userId]);\n        res.status(200).json(rows);\n    } catch (err) {\n        res.status(500).json({error: 'Database error'});\n    }\n});\n*/\n\n//insert,update,modify\n\napp.post('/api/products', (req, res) => {\n    const {id, name, price, description, imageUrl, averageRating} = req.body;\n\n    const insertQuery = `\n    INSERT INTO products (name, price, description, imageUrl, averageRating)\n    VALUES (?, ?, ?, ?, ?)\n  `;\n\n    db.run(insertQuery, [name, price, description, imageUrl, averageRating], (err) => {\n        if (err) {\n            console.error(err.message);\n            res.status(500).json({error: 'Failed to insert product'});\n        } else {\n            res.status(201).json({message: 'Product inserted successfully'});\n        }\n    });\n});\n\n// API route to add to cart\napp.post('/api/users/:userId/cart', async (req, res) => {\n    const { userId } = req.params;\n    const { product_id, quantity } = req.body;\n\n    try {\n        // Fetch product details from the products table\n        const product = await queryDatabase('SELECT * FROM products WHERE id = ?', [product_id]);\n        if (!product[0]) {\n            res.status(404).json('Could not find product!');\n            return;\n        }\n\n        // Fetch the cart item details\n        const cartItem = await queryDatabase('SELECT * FROM carts WHERE product_id = ? AND user_id = ?', [product_id, userId]);\n        if (cartItem[0]) {\n            // Calculate total price based on updated quantity\n            // const _qty = parseInt(cartItem[0].quantity) + quantity;\n            const price = parseFloat(product[0].price);\n            const total_price = price * quantity;\n\n            // Update the cart item with new quantity and total price\n            const updateQuery = `\n            UPDATE carts\n            SET quantity = ?, price = ?, total_price = ?\n            WHERE product_id = ?\n        `;\n            await queryDatabase(updateQuery, [quantity, price, total_price, product_id]);\n\n            res.status(200).json({ message: 'Cart item updated successfully' });\n            return;\n        }\n\n        // Calculate total price based on product price and quantity\n        const price = parseFloat(product[0].price);\n        const total_price = price * quantity;\n\n        // Insert the item into the cart\n        const insertQuery = `\n            INSERT INTO carts (user_id, product_id, quantity, price, total_price)\n            VALUES (?, ?, ?, ?, ?)\n        `;\n        await queryDatabase(insertQuery, [userId, product_id, quantity, price, total_price]);\n\n        res.status(200).json({ message: 'Product added to cart successfully' });\n    } catch (err) {\n        res.status(500).json({ error: 'Database error:' + err });\n    }\n});\n\n// API route for user login\napp.post('/api/login', async (req, res) => {\n    const { email, password } = req.body;\n\n    try {\n        const user = await queryDatabase('SELECT * FROM users WHERE email = ? AND password = ?', [email, password]);\n        if (!user[0]) {\n            res.status(401).json({ message: 'Invalid email or password' });\n            return;\n        }\n        res.status(200).json({ message: 'Login successful', user: user[0] });\n    } catch (err) {\n        res.status(500).json({ message: 'Database error' });\n    }\n});\n// API route for user registration\napp.post('/api/register', async (req, res) => {\n    const { email, password, username, PhoneNo } = req.body;\n\n    try {\n        const userExists = await queryDatabase('SELECT * FROM users WHERE email = ?', [email]);\n        if (userExists[0]) {\n            res.status(400).json({ message: 'User already exists' });\n            return;\n        }\n\n        const insertQuery = `\n            INSERT INTO users (username, email, PhoneNo, password)\n            VALUES (?, ?, ?, ?)\n        `;\n        await queryDatabase(insertQuery, [username, email, PhoneNo, password]);\n\n        res.status(201).json({ message: 'User registered successfully' });\n    } catch (err) {\n        res.status(500).json({ message: 'Database error' });\n    }\n});\n\n// API route to update a product based on productId\napp.put('/api/products/:productId', (req, res) => {\n    const {productId} = req.params;\n    const {name, price, description, imageUrl, averageRating} = req.body;\n\n    const updateQuery = `\n    UPDATE products\n    SET name = ?, price = ?, description = ?, imageUrl = ?, averageRating = ?\n    WHERE id = ?\n  `;\n\n    db.run(updateQuery, [name, price, description, imageUrl, averageRating, productId], (err) => {\n        if (err) {\n            console.error(err.message);\n            res.status(500).json({error: 'Failed to update product'});\n        } else {\n            res.status(200).json({message: 'Product updated successfully'});\n        }\n    });\n});\n\n// API route to update the quantity of a product in a user's cart\napp.put('/api/users/:userId/cart/:cartItemId', async (req, res) => {\n    const { userId, cartItemId } = req.params;\n    const { quantity } = req.body;\n\n    try {\n        // Fetch the cart item details\n        const cartItem = await queryDatabase('SELECT * FROM carts WHERE id = ? AND user_id = ?', [cartItemId, userId]);\n        if (!cartItem[0]) {\n            res.status(404).json('Could not find cart item!');\n            return;\n        }\n\n        // Fetch product details from the products table\n        const product = await queryDatabase('SELECT * FROM products WHERE id = ?', [cartItem[0].product_id]);\n        if (!product[0]) {\n            res.status(404).json('Could not find product!');\n            return;\n        }\n\n        // Calculate total price based on updated quantity\n        const price = parseFloat(product[0].price);\n        const total_price = price * quantity;\n\n        // Update the cart item with new quantity and total price\n        const updateQuery = `\n            UPDATE carts\n            SET quantity = ?, price = ?, total_price = ?\n            WHERE id = ?\n        `;\n        await queryDatabase(updateQuery, [quantity, price, total_price, cartItemId]);\n\n        res.status(200).json({ message: 'Cart item updated successfully' });\n    } catch (err) {\n        res.status(500).json({ error: 'Database error' });\n    }\n});\n\napp.delete('/api/users/:userId/cart/:cartItemId', async (req, res) => {\n    const { userId, cartItemId } = req.params;\n\n    try {\n        // Fetch the cart item details\n        const cartItem = await queryDatabase('SELECT * FROM carts WHERE id = ? AND user_id = ?', [cartItemId, userId]);\n        if (!cartItem[0]) {\n            res.status(404).json({ message: 'Could not find cart item!' });\n            return;\n        }\n\n        // Delete the item from the cart\n        const deleteQuery = `\n            DELETE FROM carts\n            WHERE id = ? AND user_id = ?\n        `;\n        await queryDatabase(deleteQuery, [cartItemId, userId]);\n\n        res.status(200).json({ message: 'Product removed from cart successfully' });\n    } catch (err) {\n        res.status(500).json({ message: 'Database error' });\n    }\n});\n// API route to delete a product based on productId\napp.delete('/api/products/:productId', (req, res) => {\n    const {productId} = req.params;\n\n    const deleteQuery = `\n    DELETE FROM products\n    WHERE id = ?\n  `;\n\n    db.run(deleteQuery, [productId], (err) => {\n        if (err) {\n            console.error(err.message);\n            res.status(500).json({error: 'Failed to delete product'});\n        } else {\n            res.status(200).json({message: 'Product deleted successfully'});\n        }\n    });\n});\n\n\n// Define other routes here\n\n// ... The rest of your API routes ...\n\napp.listen(8000, () => {\n    console.log('Server is listening on port 8000');\n});"],"mappings":"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"}},"mtime":1692277414740}}